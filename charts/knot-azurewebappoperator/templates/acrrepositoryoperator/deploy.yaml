apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: {{ .Values.acrrepositoryoperator.name }}
  name: {{ .Values.acrrepositoryoperator.name }}
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      control-plane: {{ .Values.acrrepositoryoperator.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        control-plane: {{ .Values.acrrepositoryoperator.name }}
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        imagePullPolicy: Always
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --health-probe-bind-address=:6789
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --leader-election-id=acrrepositoryoperator
        env:
        - name: ANSIBLE_GATHERING
          value: explicit
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              name: azure-login
              key: AZURE_SUBSCRIPTION_ID
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: azure-login
              key: AZURE_CLIENT_ID
        - name: AZURE_SECRET
          valueFrom:
            secretKeyRef:
              name: azure-login
              key: AZURE_SECRET
        - name: AZURE_TENANT  
          valueFrom:
            secretKeyRef:
              name: azure-login
              key: AZURE_TENANT
        image: {{.Values.acrrepositoryoperator.image.registry }}/{{ .Values.acrrepositoryoperator.image.name }}:{{ .Values.acrrepositoryoperator.image.tag }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6789
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 6789
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/ansible/.ansible/tmp
          name: tmp
      volumes:
      - name: tmp
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      imagePullSecrets:
      - name: "github"
      serviceAccount: {{ .Values.acrrepositoryoperator.name }}-controller-manager
      serviceAccountName: {{ .Values.acrrepositoryoperator.name }}-controller-manager
      terminationGracePeriodSeconds: 10
